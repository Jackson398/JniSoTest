apply plugin: 'com.android.application'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.aite.jnilib"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

//删除之前打出的包，默认将包打在'build/libs/'下
task deleteOldJar(type: Delete){
    delete 'build/libs/linLibJni.jar'
}
//打包操作
task makeJar(type: org.gradle.api.tasks.bundling.Jar){
    //要打成的包的名字
    baseName 'linLibJni'
    //选取要打包的文件夹
    from('build/intermediates/javac/debug/classes/com/aite/jnilib')
    //需要跟实际类的包名路径一样
    into('/com/aite/jnilib')
    //排除在外的文件
    exclude('R.class')
    //排除以R$开头的文件
    exclude{ it.name.startsWith('R$');}
}
//打包~
makeJar.dependsOn(deleteOldJar, build)